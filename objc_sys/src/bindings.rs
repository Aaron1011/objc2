/* automatically generated by rust-bindgen 0.59.1 */

use crate::*;

extern "C" {
    pub fn sel_getName(sel: SEL) -> *const ::std::os::raw::c_char;
}
extern "C" {
    pub fn sel_registerName(str_: *const ::std::os::raw::c_char) -> SEL;
}
extern "C" {
    pub fn object_getClassName(obj: id) -> *const ::std::os::raw::c_char;
}
extern "C" {
    pub fn object_getIndexedIvars(obj: id) -> *mut ::std::os::raw::c_void;
}
extern "C" {
    pub fn sel_isMapped(sel: SEL) -> BOOL;
}
extern "C" {
    pub fn sel_getUid(str_: *const ::std::os::raw::c_char) -> SEL;
}
extern "C" {
    pub fn object_getClass(obj: id) -> Class;
}
extern "C" {
    pub fn object_setClass(obj: id, cls: Class) -> Class;
}
extern "C" {
    pub fn object_getIvar(obj: id, ivar: Ivar) -> id;
}
extern "C" {
    pub fn object_setIvar(obj: id, ivar: Ivar, value: id);
}
extern "C" {
    pub fn objc_getClass(name: *const ::std::os::raw::c_char) -> Class;
}
extern "C" {
    pub fn objc_getMetaClass(name: *const ::std::os::raw::c_char) -> Class;
}
extern "C" {
    pub fn objc_lookUpClass(name: *const ::std::os::raw::c_char) -> Class;
}
extern "C" {
    pub fn objc_getRequiredClass(name: *const ::std::os::raw::c_char) -> Class;
}
extern "C" {
    pub fn objc_getClassList(
        buffer: *mut Class,
        bufferCount: ::std::os::raw::c_int,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn objc_copyClassList(outCount: *mut ::std::os::raw::c_uint) -> *mut Class;
}
extern "C" {
    pub fn class_getName(cls: Class) -> *const ::std::os::raw::c_char;
}
extern "C" {
    pub fn class_isMetaClass(cls: Class) -> BOOL;
}
extern "C" {
    pub fn class_getSuperclass(cls: Class) -> Class;
}
extern "C" {
    pub fn class_getVersion(cls: Class) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn class_setVersion(cls: Class, version: ::std::os::raw::c_int);
}
extern "C" {
    pub fn class_getInstanceSize(cls: Class) -> usize;
}
extern "C" {
    pub fn class_getInstanceVariable(cls: Class, name: *const ::std::os::raw::c_char) -> Ivar;
}
extern "C" {
    pub fn class_getClassVariable(cls: Class, name: *const ::std::os::raw::c_char) -> Ivar;
}
extern "C" {
    pub fn class_copyIvarList(cls: Class, outCount: *mut ::std::os::raw::c_uint) -> *mut Ivar;
}
extern "C" {
    pub fn class_getInstanceMethod(cls: Class, name: SEL) -> Method;
}
extern "C" {
    pub fn class_getClassMethod(cls: Class, name: SEL) -> Method;
}
extern "C" {
    pub fn class_respondsToSelector(cls: Class, sel: SEL) -> BOOL;
}
extern "C" {
    pub fn class_copyMethodList(cls: Class, outCount: *mut ::std::os::raw::c_uint) -> *mut Method;
}
extern "C" {
    pub fn class_conformsToProtocol(cls: Class, protocol: *mut Protocol) -> BOOL;
}
extern "C" {
    pub fn class_copyProtocolList(
        cls: Class,
        outCount: *mut ::std::os::raw::c_uint,
    ) -> *mut *mut Protocol;
}
extern "C" {
    pub fn class_getProperty(cls: Class, name: *const ::std::os::raw::c_char) -> objc_property_t;
}
extern "C" {
    pub fn class_copyPropertyList(
        cls: Class,
        outCount: *mut ::std::os::raw::c_uint,
    ) -> *mut objc_property_t;
}
extern "C" {
    pub fn class_getIvarLayout(cls: Class) -> *const u8;
}
extern "C" {
    pub fn class_getWeakIvarLayout(cls: Class) -> *const u8;
}
extern "C" {
    pub fn class_addMethod(
        cls: Class,
        name: SEL,
        imp: IMP,
        types: *const ::std::os::raw::c_char,
    ) -> BOOL;
}
extern "C" {
    pub fn class_replaceMethod(
        cls: Class,
        name: SEL,
        imp: IMP,
        types: *const ::std::os::raw::c_char,
    ) -> IMP;
}
extern "C" {
    pub fn class_addIvar(
        cls: Class,
        name: *const ::std::os::raw::c_char,
        size: usize,
        alignment: u8,
        types: *const ::std::os::raw::c_char,
    ) -> BOOL;
}
extern "C" {
    pub fn class_addProtocol(cls: Class, protocol: *mut Protocol) -> BOOL;
}
extern "C" {
    pub fn class_addProperty(
        cls: Class,
        name: *const ::std::os::raw::c_char,
        attributes: *const objc_property_attribute_t,
        attributeCount: ::std::os::raw::c_uint,
    ) -> BOOL;
}
extern "C" {
    pub fn class_replaceProperty(
        cls: Class,
        name: *const ::std::os::raw::c_char,
        attributes: *const objc_property_attribute_t,
        attributeCount: ::std::os::raw::c_uint,
    );
}
extern "C" {
    pub fn class_setIvarLayout(cls: Class, layout: *const u8);
}
extern "C" {
    pub fn class_setWeakIvarLayout(cls: Class, layout: *const u8);
}
extern "C" {
    pub fn class_createInstance(cls: Class, extraBytes: usize) -> id;
}
extern "C" {
    pub fn objc_allocateClassPair(
        superclass: Class,
        name: *const ::std::os::raw::c_char,
        extraBytes: usize,
    ) -> Class;
}
extern "C" {
    pub fn objc_registerClassPair(cls: Class);
}
extern "C" {
    pub fn objc_duplicateClass(
        original: Class,
        name: *const ::std::os::raw::c_char,
        extraBytes: usize,
    ) -> Class;
}
extern "C" {
    pub fn objc_disposeClassPair(cls: Class);
}
extern "C" {
    pub fn method_getName(m: Method) -> SEL;
}
extern "C" {
    pub fn method_getImplementation(m: Method) -> IMP;
}
extern "C" {
    pub fn method_getTypeEncoding(m: Method) -> *const ::std::os::raw::c_char;
}
extern "C" {
    pub fn method_getNumberOfArguments(m: Method) -> ::std::os::raw::c_uint;
}
extern "C" {
    pub fn method_copyReturnType(m: Method) -> *mut ::std::os::raw::c_char;
}
extern "C" {
    pub fn method_copyArgumentType(
        m: Method,
        index: ::std::os::raw::c_uint,
    ) -> *mut ::std::os::raw::c_char;
}
extern "C" {
    pub fn method_getReturnType(m: Method, dst: *mut ::std::os::raw::c_char, dst_len: usize);
}
extern "C" {
    pub fn method_getArgumentType(
        m: Method,
        index: ::std::os::raw::c_uint,
        dst: *mut ::std::os::raw::c_char,
        dst_len: usize,
    );
}
extern "C" {
    pub fn method_getDescription(m: Method) -> *mut objc_method_description;
}
extern "C" {
    pub fn method_setImplementation(m: Method, imp: IMP) -> IMP;
}
extern "C" {
    pub fn method_exchangeImplementations(m1: Method, m2: Method);
}
extern "C" {
    pub fn ivar_getName(v: Ivar) -> *const ::std::os::raw::c_char;
}
extern "C" {
    pub fn ivar_getTypeEncoding(v: Ivar) -> *const ::std::os::raw::c_char;
}
extern "C" {
    pub fn ivar_getOffset(v: Ivar) -> isize;
}
extern "C" {
    pub fn property_getName(property: objc_property_t) -> *const ::std::os::raw::c_char;
}
extern "C" {
    pub fn property_getAttributes(property: objc_property_t) -> *const ::std::os::raw::c_char;
}
extern "C" {
    pub fn property_copyAttributeList(
        property: objc_property_t,
        outCount: *mut ::std::os::raw::c_uint,
    ) -> *mut objc_property_attribute_t;
}
extern "C" {
    pub fn property_copyAttributeValue(
        property: objc_property_t,
        attributeName: *const ::std::os::raw::c_char,
    ) -> *mut ::std::os::raw::c_char;
}
extern "C" {
    pub fn objc_getProtocol(name: *const ::std::os::raw::c_char) -> *mut Protocol;
}
extern "C" {
    pub fn objc_copyProtocolList(outCount: *mut ::std::os::raw::c_uint) -> *mut *mut Protocol;
}
extern "C" {
    pub fn protocol_conformsToProtocol(proto: *mut Protocol, other: *mut Protocol) -> BOOL;
}
extern "C" {
    pub fn protocol_isEqual(proto: *mut Protocol, other: *mut Protocol) -> BOOL;
}
extern "C" {
    pub fn protocol_getName(proto: *mut Protocol) -> *const ::std::os::raw::c_char;
}
extern "C" {
    pub fn protocol_getMethodDescription(
        proto: *mut Protocol,
        aSel: SEL,
        isRequiredMethod: BOOL,
        isInstanceMethod: BOOL,
    ) -> objc_method_description;
}
extern "C" {
    pub fn protocol_copyMethodDescriptionList(
        proto: *mut Protocol,
        isRequiredMethod: BOOL,
        isInstanceMethod: BOOL,
        outCount: *mut ::std::os::raw::c_uint,
    ) -> *mut objc_method_description;
}
extern "C" {
    pub fn protocol_getProperty(
        proto: *mut Protocol,
        name: *const ::std::os::raw::c_char,
        isRequiredProperty: BOOL,
        isInstanceProperty: BOOL,
    ) -> objc_property_t;
}
extern "C" {
    pub fn protocol_copyPropertyList(
        proto: *mut Protocol,
        outCount: *mut ::std::os::raw::c_uint,
    ) -> *mut objc_property_t;
}
extern "C" {
    pub fn protocol_copyProtocolList(
        proto: *mut Protocol,
        outCount: *mut ::std::os::raw::c_uint,
    ) -> *mut *mut Protocol;
}
extern "C" {
    pub fn objc_allocateProtocol(name: *const ::std::os::raw::c_char) -> *mut Protocol;
}
extern "C" {
    pub fn objc_registerProtocol(proto: *mut Protocol);
}
extern "C" {
    pub fn protocol_addMethodDescription(
        proto: *mut Protocol,
        name: SEL,
        types: *const ::std::os::raw::c_char,
        isRequiredMethod: BOOL,
        isInstanceMethod: BOOL,
    );
}
extern "C" {
    pub fn protocol_addProtocol(proto: *mut Protocol, addition: *mut Protocol);
}
extern "C" {
    pub fn protocol_addProperty(
        proto: *mut Protocol,
        name: *const ::std::os::raw::c_char,
        attributes: *const objc_property_attribute_t,
        attributeCount: ::std::os::raw::c_uint,
        isRequiredProperty: BOOL,
        isInstanceProperty: BOOL,
    );
}
extern "C" {
    pub fn objc_copyImageNames(
        outCount: *mut ::std::os::raw::c_uint,
    ) -> *mut *const ::std::os::raw::c_char;
}
extern "C" {
    pub fn class_getImageName(cls: Class) -> *const ::std::os::raw::c_char;
}
extern "C" {
    pub fn objc_copyClassNamesForImage(
        image: *const ::std::os::raw::c_char,
        outCount: *mut ::std::os::raw::c_uint,
    ) -> *mut *const ::std::os::raw::c_char;
}
extern "C" {
    pub fn sel_isEqual(lhs: SEL, rhs: SEL) -> BOOL;
}
extern "C" {
    pub fn objc_enumerationMutation(obj: id);
}
extern "C" {
    pub fn objc_setEnumerationMutationHandler(
        handler: ::std::option::Option<unsafe extern "C" fn(arg1: id)>,
    );
}
extern "C" {
    pub fn objc_setForwardHandler(
        fwd: *mut ::std::os::raw::c_void,
        fwd_stret: *mut ::std::os::raw::c_void,
    );
}
extern "C" {
    pub fn imp_implementationWithBlock(block: id) -> IMP;
}
extern "C" {
    pub fn imp_getBlock(anImp: IMP) -> id;
}
extern "C" {
    pub fn imp_removeBlock(anImp: IMP) -> BOOL;
}
extern "C" {
    pub fn objc_setAssociatedObject(
        object: id,
        key: *const ::std::os::raw::c_void,
        value: id,
        policy: objc_AssociationPolicy,
    );
}
extern "C" {
    pub fn objc_getAssociatedObject(object: id, key: *const ::std::os::raw::c_void) -> id;
}
extern "C" {
    pub fn objc_removeAssociatedObjects(object: id);
}
extern "C" {
    pub fn objc_exception_throw(exception: id);
}
extern "C" {
    pub fn objc_exception_rethrow();
}
extern "C" {
    pub fn objc_begin_catch(exc_buf: *mut ::std::os::raw::c_void) -> id;
}
extern "C" {
    pub fn objc_end_catch();
}
extern "C" {
    pub fn objc_setExceptionPreprocessor(
        fn_: objc_exception_preprocessor,
    ) -> objc_exception_preprocessor;
}
extern "C" {
    pub fn objc_setExceptionMatcher(fn_: objc_exception_matcher) -> objc_exception_matcher;
}
extern "C" {
    pub fn objc_setUncaughtExceptionHandler(
        fn_: objc_uncaught_exception_handler,
    ) -> objc_uncaught_exception_handler;
}
extern "C" {
    pub fn objc_sync_enter(obj: id) -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn objc_sync_exit(obj: id) -> ::std::os::raw::c_int;
}
