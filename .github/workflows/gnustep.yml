name: GNUStep

on:
  push:
    branches: [master]
  pull_request:

env:
  CARGO_TERM_COLOR: always
  RUST_BACKTRACE: 1
  # Faster compilation and error on warnings
  RUSTFLAGS: "-C debuginfo=0 -D warnings"
  CARGO_TERM_VERBOSE: true
  CC: clang
  CXX: clang++

jobs:
  test:
    name: Test
    # TODO: 32bit and gcc-multilib
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: Install Clang
      run: sudo apt-get -y install clang

    - name: Cache GNUStep
      id: cache-gnustep
      uses: actions/cache@v2
      with:
        # Ideally I would have just cached build-files, and then rerun make
        # every time, letting it figure out what's changed. But GNUStep-Base
        # ./configure invalidates the cache, which makes it very hard to
        # know when to rebuild and when not to.
        # So instead we just cache the final output:
        # - lib/libobjc.so
        # - lib/libgnustep-base.so
        # - include/Foundation/*
        # - include/objc/*
        # - ...
        path: |
          ~/gnustep/lib
          ~/gnustep/include
        key: gnustep-libobjc2_1.9-make_2.9.0-base_1.28.0

    - name: Setup environment
      run: |
        mkdir -p $HOME/gnustep
        echo "PATH=$HOME/gnustep/bin:$PATH" >> $GITHUB_ENV
        echo "LIBRARY_PATH=$HOME/gnustep/lib:$LIBRARY_PATH" >> $GITHUB_ENV
        echo "LD_LIBRARY_PATH=$HOME/gnustep/lib:$LD_LIBRARY_PATH" >> $GITHUB_ENV
        echo "CPATH=$HOME/gnustep/include:$CPATH" >> $GITHUB_ENV
        ls -al ~/gnustep/* || true # Ignore failures

    - name: Install Make and Cmake
      if: steps.cache-gnustep.outputs.cache-hit != 'true'
      run: sudo apt-get -y install make cmake

    - name: Install GNUStep libobjc2
      if: steps.cache-gnustep.outputs.cache-hit != 'true'
      run: |
        wget https://github.com/gnustep/libobjc2/archive/refs/tags/v1.9.tar.gz
        tar -xzf v1.9.tar.gz
        mkdir -p libobjc2-1.9/build
        cd libobjc2-1.9/build
        cmake -Wno-dev -DCMAKE_INSTALL_PREFIX=$HOME/gnustep -DTESTS=OFF ..
        make install

    - name: Install GNUStep make
      if: steps.cache-gnustep.outputs.cache-hit != 'true'
      run: |
        wget https://github.com/gnustep/tools-make/archive/refs/tags/make-2_9_0.tar.gz
        tar -xzf make-2_9_0.tar.gz
        mkdir -p tools-make-make-2_9_0/build
        cd tools-make-make-2_9_0/build
        ../configure --prefix=$HOME/gnustep --with-library-combo=ng-gnu-gnu
        make install

    - name: Install GNUStep-Base
      if: steps.cache-gnustep.outputs.cache-hit != 'true'
      run: |
        wget https://github.com/gnustep/libs-base/archive/refs/tags/base-1_28_0.tar.gz
        tar -xzf base-1_28_0.tar.gz
        cd libs-base-base-1_28_0
        ./configure --prefix=$HOME/gnustep --disable-tls --disable-xslt
        make install
        ls -al $HOME/gnustep/*

    - name: Cache Rust
      uses: actions/cache@v2
      with:
        path: |
          ~/.cargo/
          target/
        key: gnustep-cargo-${{ hashFiles('**/Cargo.toml') }}
        restore-keys: |
          gnustep-cargo-

    - name: Run checks
      uses: actions-rs/cargo@v1
      with:
        command: check
        args: --no-default-features --features gnustep-1-9

    - name: Test without features
      uses: actions-rs/cargo@v1
      with:
        command: test
        args: --no-fail-fast --no-default-features --features gnustep-1-9

    - name: Test with features
      uses: actions-rs/cargo@v1
      with:
        command: test
        # Not using --all-features because some features are nightly-only
        args: --no-fail-fast --features gnustep-1-9,block,exception,catch_all,verify_message
