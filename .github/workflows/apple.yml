name: Apple

on:
  push:
    branches: [master]
  pull_request:

env:
  CARGO_TERM_COLOR: always
  RUST_BACKTRACE: 1
  # Faster compilation and error on warnings
  RUSTFLAGS: "-C debuginfo=0 -D warnings"
  RUSTDOCFLAGS: "-D warnings"
  CARGO_TERM_VERBOSE: true

jobs:
  fmt:
    name: Check formatting
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Check formatting
      uses: actions-rs/cargo@v1
      with:
        command: fmt
        args: -- --check

  test:
    name: ${{ matrix.name }}

    strategy:
      matrix:
        include:
          - name: Test macOS nightly
            os: macos-latest
            rust:
              toolchain: nightly
              target: x86_64-apple-darwin

          # - { target: x86_64-apple-ios,         os: macos-latest, }
          # - { target: aarch64-apple-ios,        os: macos-latest, }

    env:
      CARGO_BUILD_TARGET: ${{ matrix.rust.target }}

    runs-on: ${{ matrix.os }}

    steps:
    - uses: actions/checkout@v2

    - name: Install Rust toolchain
      # Assume default toolchain is already installed
      if: matrix.rust.toolchain
      uses: actions-rs/toolchain@v1
      with:
        toolchain: ${{ matrix.rust.toolchain }}
        profile: minimal
        override: true
        components: ${{ matrix.rust.components }}

    - name: Download macOS 10.13 SDK (supports 32-bit)
      if: matrix.rust.target == 'i686-apple-darwin'
      run: |
        wget https://github.com/alexey-lysiuk/macos-sdk/releases/download/10.13/MacOSX10.13.tar.bz2
        tar -xyf MacOSX10.13.tar.bz2
        echo "SDKROOT=$(pwd)/MacOSX10.13.sdk" >> $GITHUB_ENV

   - name: Run reproducer script
     run: |
       chmod +x ./my_script.sh
       ./my_script.sh
     shell: bash

     

    - name: Test without features
      uses: actions-rs/cargo@v1
      with:
        command: test
        args: ${{ matrix.args }} ${{ matrix.test-args }} --no-fail-fast --no-default-features

